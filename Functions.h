typedef struct player player;
typedef struct property property;
typedef struct dice dice;
typedef struct chance_CC chance_CC;
player* create_player(short pl_number, char *pl_name,short location, int money, short order);
player** create_list_players_test(FILE *infile,int *total_players);
void display_property(property *a);
property* create_property(char *pt_name,short n_houses, short p_house,short price, int *rent,short mortgage,int *rent_railroad,short CF,char *colours);
property** create_board(FILE *in_file);
chance_CC* create_chanceCC(char* text,int adv_location,int adv_near_RR,int adv_near_UT,int change_loc,int CF_bank,int CF_players,int GOJ,int GTJ,int CF_house,int CF_hotel);
chance_CC** create_all_chanceCC(FILE *infile);
void display_player(player *a);
void release_player(player *a);
int one_dice();
void pay_rent(player *a,property*b);
void buy_property(player *a,property *b);
void move_player(player *a, property** b,chance_CC **all,player **player_list,int total_players,int i,int move_to_location);
void throw_dice(dice *a);
void print_dice(dice *a);
void print_text1(player *a);
void print_text2();
void print_textJail(player *a);
void buy_house(player *a);
void choose(int *choice, int arr[], int n);
void print_wallet(player *a);
void display_chanceCC(chance_CC *card);
void do_chanceCC(player *a,property *p,chance_CC **all,player **player_list,int total_players,property** b,int i);
void remove_properties_bankruptcy(player *a);
void check_bankruptcy_status(player *a);
void print_textJail_no_GOJ(player *a);
void print_textJail_with_GOJ(player *a);